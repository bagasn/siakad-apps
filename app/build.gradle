apply plugin: 'com.android.application'

def versionFile = rootProject.file("app/version.properties")
def int verCode
def int verPrimary, verSecondary, verOptional
def String verName

if (versionFile.canRead()) {
    def versionProperty = new Properties();
    versionProperty.load(new FileInputStream(versionFile))
    verCode = versionProperty['VERSION_CODE'].toInteger()
    verPrimary = versionProperty['VN_PRIMARY'].toInteger()
    verSecondary = versionProperty['VN_SECONDARY'].toInteger()
    verOptional = versionProperty['VN_OPTIONAL'].toInteger()
    verName = "" + verPrimary.toString() + "." + verSecondary.toString() + "." + verOptional.toString()
} else {
//    throw new Gradle("Couldn't read version.properties")
}

def keyStorePropertyFile = rootProject.file("app/keystore.properties")
def keyStoreFilePath = rootProject.file("app/lecturesapp.jks")
def keyStoreProperty = new Properties()

keyStoreProperty.load(new FileInputStream(keyStorePropertyFile))

android {
    signingConfigs {
        config {
            keyAlias keyStoreProperty['keyAlias']
            keyPassword keyStoreProperty['keyPassword']
            storeFile keyStoreFilePath
            storePassword keyStoreProperty['storePassword']
        }
    }
    compileSdkVersion 27
//    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.bagasnasution.lecturesapp"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode verCode
        versionName verName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "Lectures App v${variant.versionName} -${variant.name}.apk"
        }
    }
    productFlavors {
    }

}

ext.autoIncrementVersionForDebug = {
    if (versionFile.canRead()) {
        def versionProperty = new Properties()
        versionProperty.load(new FileInputStream(versionFile))
        def int versionInc = versionProperty['VN_OPTIONAL'].toInteger() + 1
        versionProperty['VN_OPTIONAL'] = versionInc.toString()
        versionProperty.store(versionFile.newWriter(), null)
    } else {
//        throw new GradleException("Auto increment for debug got some problem")
    }
}

ext.autoIncrementVersionRelease = {
    if (versionFile.canRead()) {
        def versionProperty = new Properties()
        versionProperty.load(new FileInputStream(versionFile))
        def int versionInc = versionProperty['VN_SECONDARY'].toInteger() + 1
        def int toZero = 0
        versionProperty['VN_OPTIONAL'] = toZero.toString()
        versionProperty['VN_SECONDARY'] = versionInc.toString()
        versionProperty.store(versionFile.newWriter(), null)
    } else {
//        throw new GradleException("Auto increment for release got some problem")
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(assembleDebug)) {
        autoIncrementVersionForDebug()
    } else if (taskGraph.hasTask(assembleRelease)) {
        autoIncrementVersionRelease()
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile files('libs/converter-gson-2.0.2.jar')
    compile files('libs/gson-2.6.1.jar')
    compile files('libs/retrofit-2.3.0.jar')

    compile 'com.android.support:appcompat-v7:27.1.0'
    compile 'com.android.support:support-v4:27.1.0'
    compile 'com.android.support:design:27.1.0'
    compile 'com.android.support:gridlayout-v7:27.1.0'
    compile 'com.android.support:cardview-v7:27.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.1.2'
    testCompile 'junit:junit:4.12'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.1'

//    implementation 'com.github.bumptech.glide:glide:4.7.1'
//    implementation 'com.github.bumptech.glide:glide:3.7.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    compile 'me.relex:circleindicator:1.2.2@aar'

    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'de.hdodenhof:circleimageview:2.2.0'
}
